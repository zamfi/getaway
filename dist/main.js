/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/node-libs-browser/mock/empty.js":
/*!******************************************************!*\
  !*** ./node_modules/node-libs-browser/mock/empty.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n\n//# sourceURL=webpack:///./node_modules/node-libs-browser/mock/empty.js?");

/***/ }),

/***/ "./src/assets.js":
/*!***********************!*\
  !*** ./src/assets.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _car__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./car */ \"./src/car.js\");\n/* harmony import */ var _road__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./road */ \"./src/road.js\");\n/* harmony import */ var _physics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./physics */ \"./src/physics.js\");\n/********************************************\n|                                           |\n|            assets.js                      |\n|                                           |\n********************************************/\n\n\n\n\n\nconst assets = () => ({\n  road: new _road__WEBPACK_IMPORTED_MODULE_1__[\"default\"](new _physics__WEBPACK_IMPORTED_MODULE_2__[\"default\"](0, -561)),\n  car: new _car__WEBPACK_IMPORTED_MODULE_0__[\"default\"](new _physics__WEBPACK_IMPORTED_MODULE_2__[\"default\"](214, 580, 70, 100))\n});\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (assets);\n\n//# sourceURL=webpack:///./src/assets.js?");

/***/ }),

/***/ "./src/bumblebee.js":
/*!**************************!*\
  !*** ./src/bumblebee.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game.js */ \"./src/game.js\");\n/* harmony import */ var _life_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./life.js */ \"./src/life.js\");\n/* harmony import */ var _obstacle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./obstacle.js */ \"./src/obstacle.js\");\n/* harmony import */ var _cash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cash.js */ \"./src/cash.js\");\n\n\n\n\n\n\nconst redBoxImg = new Image();\nredBoxImg.src = \"./assets/images/redbox.png\";\nconst lifeImgFolder = \"./assets/images/life/\";\nconst obstacleImgFolder = \"./assets/images/obstacle/\";\nconst moneyImgFolder = \"./assets/images/money/\";\nconst numImgs = 16;\nwindow.lifeimgLst = \"\"\nwindow.obstacleimgLst = \"\"\nwindow.moneyImgLst = \"\"\nconst fs = __webpack_require__(/*! fs */ \"./node_modules/node-libs-browser/mock/empty.js\")\nclass BumbleBee {\n    constructor(game) {\n        var _this = this;\n       this.game = game;\n       console.log(fs);\n       this.lifeImgLists = [];\n       this.moneyImgLists = [];\n       this.obstacleImgLists = [];\n       for (var i = 0; i < numImgs; i++){\n           this.lifeImgLists.push(lifeImgFolder + \"life (\" + (i + 1).toString() + \").png\");    \n           this.moneyImgLists.push(moneyImgFolder + \"money (\" + (i + 1).toString() + \").png\");    \n           this.obstacleImgLists.push(obstacleImgFolder + \"obstacle (\" + (i + 1).toString() + \").png\");    \n       }\n       console.log(this.lifeImgLists);\n       \n    }\n    \n\n    randomizesprite() {\n        var rnd1 = Math.floor(Math.random() * Math.floor(numImgs));\n        var rnd2 = Math.floor(Math.random() * Math.floor(numImgs));\n        var rnd3 = Math.floor(Math.random() * Math.floor(numImgs));\n        // this.game.lifeImgSrc = this.lifeImgLists[rnd1];\n        // this.game.moneyImgSrc = this.moneyImgLists[rnd2];\n        // this.game.rockImgSrc = this.obstacleImgLists[rnd3];\n        console.log(this.game.lifeImgSrc);\n        \n    }\n    \n    \n\n   static MarkObstacle(){\n       var obstacle_count = this.game.rocks.length;\n       var i;\n       for(i=0;i<obstacle_count; i++){\n           \n       }\n\n    }\n    \n    \n\n   \n  }\n  \n  /* harmony default export */ __webpack_exports__[\"default\"] = (BumbleBee);\n  \n\n//# sourceURL=webpack:///./src/bumblebee.js?");

/***/ }),

/***/ "./src/car.js":
/*!********************!*\
  !*** ./src/car.js ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _physics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./physics */ \"./src/physics.js\");\n/* harmony import */ var _sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sprite */ \"./src/sprite.js\");\n/********************************************\n|                                           |\n|            car.js                         |\n|                                           |\n********************************************/\n\n\n\n\nconst carImg = new Image();\ncarImg.src = './assets/images/car.png';\n\nclass Car {\n  constructor(physics) {\n    this.physics = physics;\n    this.sprite = new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](carImg, 150, 70);\n    this.life = 3;\n    this.box = null;\n    this.marked = null;\n  }\n\n  hitObstacle() {\n    this.life -= 1;\n  }\n\n  getLife() {\n    this.life += 1;\n  }\n\n  resetLife() {\n    this.life = 3;\n  }\n\n  makeGreen() {\n    // const score = document.getElementById(\"lives\");\n    // score.classList.toggle(\"lives-value--green\");\n    // setTimeout(() => {\n    //   score.classList.toggle(\"lives-value--green\");\n    // }, 200);\n  }\n\n  makeRed() {\n    // const score = document.getElementById(\"lives\");\n    // score.classList.toggle(\"lives-value--red\");\n    // setTimeout(() => {\n    //   score.classList.toggle(\"lives-value--red\");\n    // }, 200);\n  }\n\n  draw(ctx) {\n    const {sprite, physics} = this;\n    const xOffSet = (sprite.width / -2) + (physics.width / 2);\n    const yOffSet = (sprite.height / -2) + (physics.height / 2);\n    ctx.drawImage(sprite.img,\n      0, 0, sprite.width, sprite.height,\n      physics.x + xOffSet, physics.y + yOffSet, sprite.width, sprite.height);\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Car);\n\n//# sourceURL=webpack:///./src/car.js?");

/***/ }),

/***/ "./src/car_controls.js":
/*!*****************************!*\
  !*** ./src/car_controls.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst KEY_UP_COLOR = \"rgba(200,200,200, 0.6)\";\nconst KEY_DOWN_COLOR = \"rgba(100,100,100, 0.8)\";\n\nconst setupControlListeners = (game) => {\n  window.addEventListener('keydown', e => {\n    const car = game.assets.car;\n    // if (e.key === \"a\" || e.key === \"ArrowLeft\") {\n    //   car.physics.dLeft = 4;\n    // }\n    // if (e.key === \"d\" || e.key === \"ArrowRight\") {\n    //   car.physics.dRight = 4;\n    // }    \n    // if (e.key === \"w\" || e.key === \"ArrowUp\") {\n    //   car.physics.dUp = 4;\n    // }\n    // if (e.key === \"s\" || e.key === \"ArrowDown\") {\n    //   car.physics.dDown = 4;\n    // }\n    if (e.key === \"q\" || e.key === \"Q\") {\n      game.checkUserResponse(\"O\");\n      document.getElementById(\"keyQ\").style[\"background-color\"] = KEY_DOWN_COLOR;\n    }\n    if (e.key === \"w\" || e.key === \"W\") {\n      game.checkUserResponse(\"C\");\n      document.getElementById(\"keyW\").style[\"background-color\"] = KEY_DOWN_COLOR;\n    }\n    if (e.key === \"e\" || e.key === \"E\") {\n      game.checkUserResponse(\"L\");\n      document.getElementById(\"keyE\").style[\"background-color\"] = KEY_DOWN_COLOR;\n    }\n\n    if (e.key === \"1\") {\n      game.checkDistractorTaskAnswer(1);\n    }\n    if (e.key === \"2\") {\n      game.checkDistractorTaskAnswer(2);\n    }\n    if (e.key === \"3\") {\n      game.checkDistractorTaskAnswer(3);\n    }\n    if (e.key === \"4\") {\n      game.checkDistractorTaskAnswer(4);\n    }\n    if (e.key === \"5\") {\n      game.checkDistractorTaskAnswer(5);\n    }\n    if (e.key === \"6\") {\n      game.checkDistractorTaskAnswer(6);\n    }\n    if (e.key === \"7\") {\n      game.checkDistractorTaskAnswer(7);\n    }\n    if (e.key === \"8\") {\n      game.checkDistractorTaskAnswer(8);\n    }\n    if (e.key === \"9\") {\n      game.checkDistractorTaskAnswer(9);\n    }\n    if (e.key === \"0\") {\n      game.checkDistractorTaskAnswer(0);\n    }\n\n  })\n  window.addEventListener('keyup', e => {\n    const car = game.assets.car;\n    \n    // if (e.key === \"a\" || e.key === \"ArrowLeft\") {\n    //   car.physics.dLeft = 0;\n    // }\n    // if (e.key === \"d\" || e.key === \"ArrowRight\") {\n    //   car.physics.dRight = 0;\n    // }\n    // if (e.key === \"w\" || e.key === \"ArrowUp\") {\n    //   car.physics.dUp = 0;\n    // }\n    // if (e.key === \"s\" || e.key === \"ArrowDown\") {\n    //   car.physics.dDown = 0;\n    // }\n\n    if (e.key === \"q\" || e.key === \"Q\") {\n      game.checkUserResponse(\"O\");\n      document.getElementById(\"keyQ\").style[\"background-color\"] = KEY_UP_COLOR;\n    }\n    if (e.key === \"w\" || e.key === \"W\") {\n      game.checkUserResponse(\"C\");\n      document.getElementById(\"keyW\").style[\"background-color\"] = KEY_UP_COLOR;\n    }\n    if (e.key === \"e\" || e.key === \"E\") {\n      game.checkUserResponse(\"L\");\n      document.getElementById(\"keyE\").style[\"background-color\"] = KEY_UP_COLOR;\n    }\n  })\n  \n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (setupControlListeners);\n\n//# sourceURL=webpack:///./src/car_controls.js?");

/***/ }),

/***/ "./src/cash.js":
/*!*********************!*\
  !*** ./src/cash.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sprite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sprite */ \"./src/sprite.js\");\n\n\nconst cashImg = new Image();\n//cashImg.src = \"./assets/images/money.png\";\nconst scale = 1.5;\nconst redBox = new Image();\nredBox.src = \"./assets/images/redbox.png\";\nclass Cash {\n  constructor(physics, imgSrc, marked, assetid, distance = -1) {\n    \n    this.physics = physics;\n    cashImg.src = imgSrc;\n    this.sprite = new _sprite__WEBPACK_IMPORTED_MODULE_0__[\"default\"](cashImg, 50, 50, 1.0 * scale, 1.0 * scale);\n    this.box = new _sprite__WEBPACK_IMPORTED_MODULE_0__[\"default\"](redBox, 40, 50, 1 * scale, 1.3 * scale)\n    this.marked = marked;\n    this.assetid = assetid;\n    this.distance = distance;\n    //\"U\" for unrecognized, \"O\" for obstacle, \"L\" for life, \"C\" for points/cash/money\n    this.recognizedType = this.marked? \"U\" : assetid[0];  \n   \n  }\n\n  updatesprite(imgSrc) {\n    cashImg.src = imgSrc;\n    this.sprite = new _sprite__WEBPACK_IMPORTED_MODULE_0__[\"default\"](cashImg, 50, 50, 1.0 * scale, 1.0 * scale);\n  }\n\n  move() {\n    this.physics.dDown = this.physics.speed;\n  }\n\n  stop() {\n    this.physics.dDown = 0;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Cash);\n\n\n//# sourceURL=webpack:///./src/cash.js?");

/***/ }),

/***/ "./src/game.js":
/*!*********************!*\
  !*** ./src/game.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _road_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./road.js */ \"./src/road.js\");\n/* harmony import */ var _life_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./life.js */ \"./src/life.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.js */ \"./src/util.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_util_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _obstacle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./obstacle.js */ \"./src/obstacle.js\");\n/* harmony import */ var _physics_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./physics.js */ \"./src/physics.js\");\n/* harmony import */ var _cash_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cash.js */ \"./src/cash.js\");\n/* harmony import */ var _car_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./car.js */ \"./src/car.js\");\n/* harmony import */ var _assets_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./assets.js */ \"./src/assets.js\");\n/********************************************\n|                                           |\n|            game.js                        |\n|                                           |\n********************************************/\n\n// import GameView from './game_view.js';\n// import Car from './car.js';\n// import { request } from 'http';\n\n\n\n\n\n\n\n\n\n\nconst fs = __webpack_require__(/*! fs */ \"./node_modules/node-libs-browser/mock/empty.js\"); \nconst lifeImgFolder = \"./assets/images/life/\";\nconst obstacleImgFolder = \"./assets/images/obstacle/\";\nconst moneyImgFolder = \"./assets/images/money/\";\nvar ctr = 0;\nconst T_width = 80; //car width/2 + obstacle width/2 + small const: Used for avoiding obstacles\nconst R_l = 150; // road lb in x; //100 pixels on each side for dead zone?\nconst R_u = 350; // road ub in x;\nconst Kp_obs = 0.03; //Kp for x-tracker on car for obstacle avoidance\nconst Kp_getter = 0.01; //Kp for x-tracker on car to get life or cash\nconst obj_buf = 75+40; //constant for when object goes behind car (1/2 of car len) + buffer\nconst OBJECTTYPE = Object.freeze({ \"obstacle\": \"O\", \"cash\": \"C\", \"life\": \"L\" });\nconst QUERYTYPE = Object.freeze({ \"attention\": \"A\", \"environment\": \"E\"});\n\nconst MIN_BOX_DISTANCE_RATIO = 0.3; //It will get boxed at a maximum distance of 0.3*Canvas Height from start\nconst MAX_BOX_DISTANCE_RATIO = 0.3; //It will get boxed at a maximum distance of 0.3*Canvas Height from start\n\nconst NO_QUERY_TIME_WINDOW_FOR_ENV_QUERY = 3000;// in milliseconds\nconst ATT_QUERY_INTERVAL = 19000; // in milliseconds\nconst EXP_PROB_TIME_CONSTANT = 8500;// in milliseconds\nconst QUERY_TIMEOUT = 4000; // in milliseconds \nconst OBJECT_CREATION_INTERVAL = 10000;\nconst CONTROLLER_REACTION_TIME = 2000;\nconst TIMEBAR_INTERVAL_TIME = 50;\n\n//Distractor task stuffs\nconst CONTROLLER_SAMPLING_TIME = 500;// in milliseconds\nconst DISTRACTOR_TASK_TIME = 5000; //Also the timeout for distractor tasl // in milliseconds\nconst DISTRACTOR_TASK_PAUSE = 1500;// in milliseconds\nconst GAME_TIME = 5 * 60000;// in milliseconds\n\nconst MIN_RES_WIDTH = 1280;\nconst MIN_RES_HEIGHT = 800;\n\nvar datalogWritten = false;\n//Event types\n\n\n// const EVENTTYPE = Object.freeze({\n//   \"CREATE_ASSET\": 0,\n//   \"CORRECT_BOXED_RESPONSE\": 1,\n//   \"WRONG_BOXED_RESPONSE\": 2,\n//   \"TIMEOUT_BOXED_RESPONSE\": 3,\n//   \"CORRECT_DIST_RESPONSE\": 4,\n//   \"WRONG_DIST_RESPONSE\": 5,\n//   \"TIMEOUT_DIST_RESPONSE\": 6,\n//   \"RANDOMIZE_ICON\": 7,\n//   \"ENV_QUERY_CREATED\": 8,\n//   \"ATT_QUERY_CREATED\": 9,\n//   \"ENV_QUERY_ACTIVE\": 10,\n//   \"ATT_QUERY_ACTIVE\": 11\n// });\n\nconst EVENTTYPE = Object.freeze({\n  \"CREATE_ASSET\": \"CREATE_ASSET\",\n  \"CORRECT_BOXED_RESPONSE\": \"CORRECT_BOXED_RESPONSE\",\n  \"WRONG_BOXED_RESPONSE\": \"WRONG_BOXED_RESPONSE\",\n  \"TIMEOUT_BOXED_RESPONSE\": \"TIMEOUT_BOXED_RESPONSE\",\n  \"CORRECT_DIST_RESPONSE\": \"CORRECT_DIST_RESPONSE\",\n  \"WRONG_DIST_RESPONSE\": \"WRONG_DIST_RESPONSE\",\n  \"TIMEOUT_DIST_RESPONSE\": \"TIMEOUT_DIST_RESPONSE\",\n  \"RANDOMIZE_ICON\": \"RANDOMIZE_ICON\",\n  \"ENV_QUERY_CREATED\": \"ENV_QUERY_CREATED\",\n  \"ATT_QUERY_CREATED\": \"ATT_QUERY_CREATED\",\n  \"NEW_MAIN_QUERY\": \"NEW_MAIN_QUERY\",\n  \"ASSET_PASSED_CANVAS\": \"ASSET_PASSED_CANVAS\",\n  \"ASSET_CAR_COLLIDED\": \"ASSET_CAR_COLLIDED\",\n  \"NEW_DIST_QUERY\": \"NEW_DIST_QUERY\",\n  \"GAME_OVER\": \"GAME_OVER\",\n  \"GAME_START\":\"GAME_START\"\n});\n\nvar prev_time = null;\nvar prev_object_y = null;\nvar max_time = 15;\nfunction indexOfSmallest(a) {\n var lowest = 0;\n for (var i = 1; i < a.length; i++) {\n  if (a[i] < a[lowest]) lowest = i;\n }\n return lowest;\n}\n\nclass Game {\n  constructor(canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.gameOver = false;\n    this.rocks = [];\n    this.life = [];\n    this.cash = [];\n    this.boxed = [];\n    this.assets = Object(_assets_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n    this.animate = null;\n    this.lifeImgSrc = \"./assets/images/life/life (1).png\";\n    this.rockImgSrc = \"./assets/images/obstacle/obstacle (1).png\";\n    this.moneyImgSrc = \"./assets/images/money/money (1).png\";\n    this.lifeImgLists = [];\n    this.moneyImgLists = [];\n    this.obstacleImgLists = [];\n    this.numImgs = 16;\n    this.assetidCounter = -1;\n    this.activeResponse = false; // For the main task\n    this.stopBlink = false;\n    this.queryType = null;\n    this.queryTimeElapsed = false;\n    this.queryUserResponded = false;\n\n\n    var d = new Date();\n\n    this.timeOfLastEnvQuery = d.getTime();\n    this.timeOfLastAttQuery = d.getTime();\n    this.timeOfLastDistractorTask = d.getTime();\n   \n    this.timeOfEnvQueryPlanning = -1; //Time at which env query's random interval duration was defined\n    this.randomIthObjectForEnvQuery = 100000000; //Some high value //Pick the ith object starting this object creation cycle (0 this one)\n    \n    this.startTime = GAME_TIME*2; // Some high value greater than game time\n    this.num2 = 0; // An integer between 0 to 99\n    this.num3 = 0; // An integer between 0 to 9\n    this.num1 = 0;\n    this.distractorTaskActive = true;\n\n    this.dataLog = \"\";\n    \n    this.newDistractorTask();\n\n    for (var i = 0; i < this.numImgs; i++) {\n      this.lifeImgLists.push(lifeImgFolder + \"life (\" + (i + 1).toString() + \").png\");\n      this.moneyImgLists.push(moneyImgFolder + \"money (\" + (i + 1).toString() + \").png\");\n      this.obstacleImgLists.push(obstacleImgFolder + \"obstacle (\" + (i + 1).toString() + \").png\");\n    }\n    document.getElementById(\"obstacle\").style[\"background-image\"] = \"url(\\'\" + this.rockImgSrc + \"\\')\";\n    document.getElementById(\"money\").style[\"background-image\"] = \"url(\\'\" + this.moneyImgSrc + \"\\')\";\n    document.getElementById(\"life\").style[\"background-image\"] = \"url(\\'\" + this.lifeImgSrc + \"\\')\";\n\n    \n\n  }\n\n  \n\n\n  holdCanvas(blinkDuration,color) {\n    var interval = window.setInterval(function () {\n      document.getElementById(\"canvas\").style[\"border\"] = \"20px solid \"+color;\n    }, 5);\n\n    setTimeout(function (y) {\n      document.getElementById(\"canvas\").style[\"border\"] = \"20px solid black\";\n      clearInterval(y);\n    }, blinkDuration, interval);\n  }\n  \n  holdDistractorCanvas(blinkDuration, color) {\n    var interval = window.setInterval(function () {\n      document.getElementById(\"distractortask\").style[\"border\"] = \"20px solid \" + color;\n    }, 5);\n\n    setTimeout(function (y) {\n      document.getElementById(\"distractortask\").style[\"border\"] = \"20px solid black\";\n      clearInterval(y);\n    }, blinkDuration, interval);\n  }\n\nblinkCanvas(blinkRate, blinkDuration,color) {\n  var interval = window.setInterval(function () {\n    if (document.getElementById(\"canvas\").style[\"border\"] != \"20px solid \"+color) {\n      document.getElementById(\"canvas\").style[\"border\"] = \"20px solid \"+color;\n    } else {\n      document.getElementById(\"canvas\").style[\"border\"] = \"20px solid black\";\n    }\n  }, blinkRate);\n\n  setTimeout(function (y) {\n    document.getElementById(\"canvas\").style[\"border\"] = \"20px solid black\";\n    clearInterval(y);\n  }, blinkDuration, interval);\n}\n\naskEnvironmentQueryBasedOnEnvironmentProbFunction_deprecated() {\n    var d = new Date();\n\n    // var a = Math.random();\n    // var thresh = 1-Math.exp(-1 * (d.getTime() - this.timeOfLastAttQuery) / EXP_PROB_TIME_CONSTANT);\n if(this.timeOfEnvQueryPlanning<0 && \n  this.timeOfLastAttQuery>this.timeOfLastEnvQuery &&\n  (d.getTime() - this.timeOfLastAttQuery) > 0.5 * NO_QUERY_TIME_WINDOW_FOR_ENV_QUERY ){ //If this is negative that means that we are yet to plan the environment query\n\n   var durationLeft =  this.timeOfLastAttQuery + ATT_QUERY_INTERVAL - d.getTime() - 0.5 * NO_QUERY_TIME_WINDOW_FOR_ENV_QUERY;\n   if(durationLeft >0 )\n   {\n      this.randomTimeIntervalEnvQuery = Math.random() * durationLeft; //Uniform sampling\n      console.log(\"Random time interval is \"+this.randomTimeIntervalEnvQuery*0.001+\" seconds.\");\n      this.timeOfEnvQueryPlanning = d.getTime();\n   }\n    return(false);\n }\n\n  if(d.getTime() - this.timeOfEnvQueryPlanning > this.randomTimeIntervalEnvQuery)\n  {\n      this.timeOfEnvQueryPlanning = -1;\n      return(true);\n  }\n    \n }\n\n askEnvironmentQueryBasedOnEnvironmentProbFunction() {\n  var d = new Date();\n\n  // var a = Math.random();\n  // var thresh = 1-Math.exp(-1 * (d.getTime() - this.timeOfLastAttQuery) / EXP_PROB_TIME_CONSTANT);\nif(this.timeOfEnvQueryPlanning<0 && this.timeOfLastAttQuery>this.timeOfLastEnvQuery){ //If this is negative that means that we are yet to plan the environment query\n\n  var NumObjectsBetweenWindows = Math.floor((ATT_QUERY_INTERVAL - 2*QUERY_TIMEOUT)/OBJECT_CREATION_INTERVAL) ; //(d.getTime() - this.timeOfLastAttQuery) > 0.5 * NO_QUERY_TIME_WINDOW_FOR_ENV_QUERY \n  console.log(\"Objects between attn queries \", NumObjectsBetweenWindows);\n  this.randomIthObjectForEnvQuery = Math.floor(Math.random() * NumObjectsBetweenWindows)+1;\n  console.log(\"Object Selected for env query \", this.randomIthObjectForEnvQuery);\n  this.timeOfEnvQueryPlanning = this.timeOfLastAttQuery;\n  // this.timeOfEnvQueryPlanning = d.getTime();\n  // return(false);\n\n}\n\n   if (d.getTime() - this.timeOfEnvQueryPlanning > this.randomIthObjectForEnvQuery * OBJECT_CREATION_INTERVAL - 500 ||\n     d.getTime() - this.timeOfEnvQueryPlanning < this.randomIthObjectForEnvQuery * OBJECT_CREATION_INTERVAL + 500) //epsilon is 200 milliseconds\n{\n    this.timeOfEnvQueryPlanning = -1;\n    return(true);\n}\nelse\n{ \n    console.log(\"Uncharted waters\");\n    return(false);\n}\n  \n}\nsetRecognizedType(assetid,assetUserSpecifiedType){\n  var assetActualType = assetid[0];\n  var i;\n  switch(assetActualType){\n    case \"O\":\n      \n      for (i = 0; i < this.rocks.length; i++) {\n        if(this.rocks[i].assetid == assetid){\n          this.rocks[i].recognizedType = assetUserSpecifiedType;\n          break;\n        }\n      }\n      break;\n    case \"L\":\n      for (i = 0; i < this.life.length; i++) {\n        if(this.life[i].assetid == assetid){\n          this.life[i].recognizedType = assetUserSpecifiedType;\n          break;\n        }\n      }\n      break;\n    case \"C\":\n      for (i = 0; i < this.cash.length; i++) {\n        if(this.cash[i].assetid == assetid){\n          this.cash[i].recognizedType = assetUserSpecifiedType;\n          break;\n        }\n      }\n      break;\n      default:\n        console.log(\"Unrecognized asset type\");\n  }\n  }\n\n  newDistractorTask() {\n    var d = new Date();\n    this.num2 = Math.floor(Math.random() * 100); // An integer between 0 to 99\n    this.num3 = Math.floor(Math.random() * 10); // An integer between 0 to 9\n    this.num1 = this.num2 + this.num3;\n    document.getElementById(\"num1\").innerHTML = this.num1.toString();\n    document.getElementById(\"num2\").innerHTML = this.num2.toString();\n    document.getElementById(\"num3\").innerHTML = \"?\";\n    this.timeOfLastDistractorTask = d.getTime();\n\n    this.logEvent(EVENTTYPE.NEW_DIST_QUERY, this.num1.toString() + \"-\" + this.num2.toString() + \" = ???\");\n  }\n\n  checkDistractorTaskAnswer(i) {\n    \n    if(this.num3>=0){ // if num3 is greater than 0 then , then the distractor task is active\n      if (i == this.num3) {\n        this.holdDistractorCanvas(DISTRACTOR_TASK_PAUSE, \"green\");\n        // Code to do things on correct answer to distractor task\n        this.logEvent(EVENTTYPE.CORRECT_DIST_RESPONSE, this.num1.toString()+\"-\"+this.num2.toString()+\"=\"+i.toString());\n      }\n      else {\n        this.holdDistractorCanvas(DISTRACTOR_TASK_PAUSE, \"red\");\n        this.logEvent(EVENTTYPE.WRONG_DIST_RESPONSE, this.num1.toString() + \"-\" + this.num2.toString() + \"=\" + i.toString());\n        // Code to do things on wrong answer to distractor task\n      }\n      document.getElementById(\"num3\").innerHTML = i.toString();\n      //this.num3 = -1; // set to inactive\n    }\n    //this.newDistractorTask();\n    this.distractorTaskActive = false;\n    var _this = this;\n    setTimeout(function () {\n      _this.newDistractorTask();\n      _this.distractorTaskActive = true;\n    }, DISTRACTOR_TASK_PAUSE);\n    //setTimeout(this.newDistractorTask, DISTRACTOR_TASK_TIMEOUT);\n  }\n  checkUserResponse(i) {\n\n    if (this.boxed.length > 0 && this.activeResponse) {\n      this.queryUserResponded = true;\n          if (this.boxed[0][0] == i) {\n              //Blink green\n            //document.getElementById(\"canvas\").style[\"border\"] = \"20px solid green\";\n            this.holdCanvas(2000, \"green\");\n            // Write functions to do whatever has to be done when user enteres correct response\n            this.activeResponse = false;\n            this.setRecognizedType(this.boxed[0], i);\n            this.logEvent(EVENTTYPE.CORRECT_BOXED_RESPONSE, i+\"-\"+this.boxed[0]);\n\n          }\n          else {\n            //Blink red\n            //document.getElementById(\"canvas\").style[\"border\"] = \"20px solid red\";\n            this.holdCanvas(2000, \"red\");\n            // Write functions to do whatever has to be done when user enteres wrong response\n            this.activeResponse = false;\n            this.setRecognizedType(this.boxed[0], i)\n            this.logEvent(EVENTTYPE.WRONG_BOXED_RESPONSE, i + \"-\" + this.boxed[0]);\n          }\n      }\n  }\n\n  updateDistractorTimeBar() {\n\n      var d = new Date();\n\n    if (this.distractorTaskActive) {\n      var time_bar_length = (DISTRACTOR_TASK_TIME - (d.getTime() - this.timeOfLastDistractorTask))/1000;\n        \n      var elem = document.getElementById(\"distractorBar\");\n      elem.style.width = ((time_bar_length / (DISTRACTOR_TASK_TIME*0.001)) * 100) + \"%\";\n      document.getElementById(\"distractorBarTime\").innerHTML = `${Math.floor((time_bar_length) * 10) / 10 + \"s\"}`;\n      //console.log(Math.floor(time_bar_length*10)/10+\"s\");\n      \n      if (time_bar_length < 0.05) {\n        this.holdDistractorCanvas(DISTRACTOR_TASK_PAUSE, \"red\");\n        this.distractorTaskActive = false;\n        this.logEvent(EVENTTYPE.TIMEOUT_DIST_RESPONSE, this.num1.toString()+\"-\"+this.num2.toString()+\" = ???\");\n        \n\n        var _this = this;\n        setTimeout(function () {\n          _this.newDistractorTask();\n          _this.distractorTaskActive = true;\n        }, DISTRACTOR_TASK_PAUSE);\n      }\n    }\n    }\n\n\n  updateTimeBar() {\n    \n    //Check if boxed is empty; if it is; disbale \"What is boxed item?\" and time bar and do nothing\n    //else run everything below\n    var boxEmpty = Array.isArray(this.boxed) && !this.boxed.length;\n\n    if (boxEmpty || this.queryTimeElapsed || this.queryUserResponded)\n    {\n      //document.getElementById(\"myProgress\").innerHTML = '';\n      document.getElementById(\"myProgress\").style.display = \"none\";\n      document.getElementById(\"keyW\").style.display = \"none\";\n      document.getElementById(\"keyQ\").style.display = \"none\";\n      document.getElementById(\"keyE\").style.display = \"none\";\n      document.getElementById(\"maintaskQuestion\").style.display = \"none\";\n     }\n\n    else //if (!boxEmpty && !this.queryTimeElapsed)\n    {\n      //document.getElementById(\"myProgress\").innerHTML ='<div class =\"time-bar-container\">Time remaining: <div id=\"myBarTime\"></div> </div > <div id=\"myBar\"></div>';\n      document.getElementById(\"myProgress\").style.display = \"block\";\n      document.getElementById(\"keyW\").style.display = \"flex\";\n      document.getElementById(\"keyQ\").style.display = \"flex\";\n      document.getElementById(\"keyE\").style.display = \"flex\";\n      document.getElementById(\"maintaskQuestion\").style.display = \"block\";\n\n      var objectType = this.closestObject(); // 0: cash, 1: rock, 2: life, 3: no spawned object ahead\n\n      var object;\n      var object_y = null;\n      var object_height = null;\n      const car_y = this.assets.car.physics.y;\n      const car_height = this.assets.car.physics.height ? this.assets.car.physics.height : this.assets.car.sprite.height*this.assets.car.sprite.height_scale;\n      var speed = 0; \n      var curr_time;\n      if(objectType == 0){\n        object = this.cash[0];\n        curr_time = (new Date()).getTime();\n      }\n      else if(objectType == 1){\n        object = this.rocks[0];\n      }\n      else if(objectType == 2){\n        object = this.life[0];\n      }\n      if (object) {\n        object_height = object.physics.height ? object.physics.height : object.sprite.height*object.sprite.height_scale;\n        object_y = object.physics.y;\n        curr_time = (new Date()).getTime();\n      }\n\n      \n      if(prev_time == null)\n      {\n        speed = null;\n        prev_time = curr_time;\n      }\n      if(prev_object_y == null){\n        speed = null;\n        prev_object_y = object_y;\n        prev_time = curr_time;\n      }\n\n      if(object_y == null)\n      {\n        speed = null;\n      }\n\n      if(object_y!=null && prev_object_y!=null){\n          if(object_y < prev_object_y){\n            speed = null;\n            prev_object_y = object_y;\n            prev_time = curr_time;\n          }\n      }\n\n      if(speed!=null){\n        var d = new Date();\n        \n        this.assets.car.physics.speed = (object.physics.dy()) / (0.001 * (TIMEBAR_INTERVAL_TIME));\n        //Math in js is floating\n        var speed = this.assets.car.physics.speed; // TODO_ERIN: Automated code commented above. But it has jitter. Need to tie this to physics.speed\n        //speed = (((object_y - prev_object_y)*1000) / (curr_time - prev_time));\n        console.log(\"Speed is : \" + speed);\n        \n        max_time = car_y /speed;\n        var time_bar_length = ((car_y) - (object_y+object_height))/speed;\n        // console.log(\"Time bar length: \"+Math.floor(time_bar_length) + \", Speed: \"+speed\n        //           + \", Car_y: \"+car_y + \", Car_height: \" +car_height\n        //           + \", Object_y: \"+object_y + \", Object_height: \" +object_height\n        //           + \", Prev_time: \"+prev_time+ \", Prev_object_y: \" +prev_object_y\n        //           + \", Curr_time: \"+curr_time+ \", Object_y: \" +object_y);\n        prev_object_y = object_y;\n        prev_time = curr_time;\n        var elem = document.getElementById(\"myBar\");\n        elem.style.width = (((time_bar_length-0.001*CONTROLLER_REACTION_TIME)/max_time)*100) + \"%\";\n        document.getElementById(\"myBarTime\").innerHTML = `${Math.floor((time_bar_length - 0.001 * CONTROLLER_REACTION_TIME)*10)/10+\"s\"}`;\n        //console.log(Math.floor(time_bar_length*10)/10+\"s\");\n        if (time_bar_length < 0.001 * CONTROLLER_REACTION_TIME && time_bar_length > 0.1\n          && !this.queryTimeElapsed\n          && !this.queryUserResponded\n        ) {\n          if (this.queryType == QUERYTYPE.attention) {\n            this.setRecognizedType(this.boxed[0], this.boxed[0][0]);\n            // Makes the controller act SAFE\n          }\n          else if(this.queryType == QUERYTYPE.environment) {\n            this.setRecognizedType(this.boxed[0], this.boxed[0][0] == OBJECTTYPE.obstacle ? OBJECTTYPE.life : OBJECTTYPE.obstacle); \n            // Makes the controller act EVIL\n          }\n          // Write code on what needs to be done after Query time is elapsed\n          this.holdCanvas(2000, \"red\");\n          this.activeResponse = false;\n          this.queryTimeElapsed = true;\n          this.logEvent(EVENTTYPE.TIMEOUT_BOXED_RESPONSE,  \"U-\"+this.boxed[0]);\n        }\n        }\n    }\n\n  }\n\n  // hit detection for objects\n  static checkCollision(car, object, array, assets,boxed,_this) {\n    if (object instanceof _obstacle_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n      if (_util_js__WEBPACK_IMPORTED_MODULE_2___default.a.collide_with_scale(car, object)) {\n        car.hitObstacle();\n        car.makeRed();\n        array.splice(array.indexOf(object), 1);\n        /*console.log(\"Before removing\");\n        console.log(boxed);\n        console.log(object.assetid);*/\n        if (boxed.indexOf(object.assetid) != -1) {\n          boxed.splice(boxed.indexOf(object.assetid), 1);\n          _this.logEvent(EVENTTYPE.ASSET_CAR_COLLIDED, object.assetid);\n          \n        }\n        /*console.log(\"After removing\");\n        console.log(boxed);\n        console.log(object.assetid);*/\n      }\n    }\n    if (object instanceof _life_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n      if (_util_js__WEBPACK_IMPORTED_MODULE_2___default.a.collide_with_scale(car, object)) {\n        car.getLife();\n        car.makeGreen();\n        array.splice(array.indexOf(object), 1);\n        /*console.log(\"Before removing\");\n        console.log(boxed);\n        console.log(object.assetid);*/\n        if (boxed.indexOf(object.assetid) != -1) {\n          boxed.splice(boxed.indexOf(object.assetid), 1);\n          _this.logEvent(EVENTTYPE.ASSET_CAR_COLLIDED, object.assetid);\n          \n        }\n        /*console.log(\"After removing\");\n        console.log(boxed);\n        console.log(object.assetid);*/\n      }\n    }\n    if (object instanceof _cash_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]) {\n      if (_util_js__WEBPACK_IMPORTED_MODULE_2___default.a.collide_with_scale(car, object)) {\n        assets.road.score += 100;\n        assets.road.makeGreen();\n        array.splice(array.indexOf(object), 1);\n        /*console.log(\"Before removing\");\n        console.log(boxed);\n        console.log(object.assetid);*/\n        if (boxed.indexOf(object.assetid) != -1) {\n          boxed.splice(boxed.indexOf(object.assetid), 1);\n          _this.logEvent(EVENTTYPE.ASSET_CAR_COLLIDED, object.assetid);\n          \n        }\n        /*console.log(\"After removing\");\n        console.log(boxed);\n        console.log(object.assetid);*/\n      }\n    }\n  }\n  obstacleProbablityFunction() {\n    return (Math.random() > 0.5);\n  }\n\n  moneyProbablityFunction() {\n    return (Math.random() > 0.5);\n  }\n\n  lifeProbablityFunction() {\n    return (Math.random() > 0.5);\n  }\n  // obstacleBoxProbablityFunction() {\n  //   return (Math.random() > 0.5);\n  // }\n\n  // moneyBoxProbablityFunction() {\n  //   return (Math.random() > 0.5);\n  // }\n\n  // lifeBoxProbablityFunction() {\n  //   return (Math.random() > 0.5);\n  // }\n\n  objectTypeProbablityFunction() {\n    var a = Math.random();\n\n    if (a > 0 && a < 0.33)\n      return (OBJECTTYPE.obstacle);\n    else if (a >= 0.33 && a < 0.66)\n      return (OBJECTTYPE.life);\n    else\n      return (OBJECTTYPE.cash);\n  }\n\n  boxDistanceProbablityFunction() {\n    // Uniform probablity between 0.1 and 0.4\n    return (MIN_BOX_DISTANCE_RATIO+Math.random()*(MAX_BOX_DISTANCE_RATIO-MIN_BOX_DISTANCE_RATIO));\n  }\n\n  \n  // checks if item passed canvas height to delete\n  static checkCanvas(object, array, boxed,_this) {\n\n    if (object instanceof _life_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n      \n      if (object.physics.y > canvas.height) {\n        array.splice(array.indexOf(object), 1);\n        if (boxed.indexOf(object.assetid) != -1){\n          boxed.splice(boxed.indexOf(object.assetid), 1);\n          _this.logEvent(EVENTTYPE.ASSET_PASSED_CANVAS, object.assetid);\n          \n         }\n      }\n    }\n    if (object instanceof _obstacle_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n      \n      if (object.physics.y > canvas.height) {\n        array.splice(array.indexOf(object), 1);\n        if (boxed.indexOf(object.assetid) != -1) {\n          boxed.splice(boxed.indexOf(object.assetid), 1);\n          _this.logEvent(EVENTTYPE.ASSET_PASSED_CANVAS, object.assetid);\n          \n        }\n      }\n    }\n    if (object instanceof _cash_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]) {\n      \n      if (object.physics.y > canvas.height) {\n        array.splice(array.indexOf(object), 1);\n        if (boxed.indexOf(object.assetid) != -1) {\n          boxed.splice(boxed.indexOf(object.assetid), 1);\n          _this.logEvent(EVENTTYPE.ASSET_PASSED_CANVAS, object.assetid);\n          \n        }\n      }\n    }\n    // console.log(\"After removing\");\n    // console.log(boxed);\n  }\n\n  drawAsset(asset) {\n    const { physics, sprite, box, marked, distance } = asset;\n\n    // redraw road\n    if (asset instanceof _road_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] && asset.physics.y >= 0) {\n      if (sprite.height > canvas.height) {\n        if (asset.physics.y > (canvas.height)) {\n          asset.physics.y = canvas.height - sprite.height;\n        }\n\n        this.ctx.drawImage(sprite.img, 0, 0, sprite.width, sprite.height, asset.physics.x, asset.physics.y - sprite.height + 1, sprite.width, sprite.height);\n      }\n    }\n\n    // draw more rocks\n    if (asset instanceof _obstacle_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] && asset.physics.y >= 0) {\n      if (asset.physics.y > canvas.height) {\n        this.ctx.drawImage(sprite.img, 0, 0, sprite.width, sprite.height, asset.physics.x, asset.physics.y - 900, sprite.width * sprite.width_scale, sprite.height * sprite.height_scale);\n        //console.log(\"Drawing rock\");\n\n        // if(marked){\n        //   //this.ctx.drawImage(box.img, 0, 0, box.width, box.height, asset.physics.x, asset.physics.y - 900, box.width*sprite.width_scale, box.height*sprite.height_scale);\n        //   this.ctx.drawImage(box.img, 0, 0, box.width, box.height, asset.physics.x+0.5*(sprite.width*sprite.width_scale-box.width*sprite.width_scale), asset.physics.y - 900 + 0.5*(sprite.height*sprite.height_scale - box.height*box.height_scale), box.width*box.width_scale, box.height*box.height_scale);\n        // }\n      }\n    }\n\n    if (asset instanceof _car_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]) {\n      // this.ctx.drawImage(sprite.img,\n      //   0, 0, sprite.width, sprite.height,\n      //   physics.x, physics.y, sprite.width, sprite.height);\n      asset.draw(this.ctx);\n    } else {\n      // draw everything else\n      this.ctx.drawImage(sprite.img, 0, 0, sprite.width, sprite.height,\n        physics.x, physics.y, sprite.width * sprite.width_scale, sprite.height * sprite.height_scale);\n      if (marked &&  physics.y>distance*this.canvas.height) {\n\n          //this.ctx.drawImage(box.img, 0, 0, box.width, box.height, physics.x, physics.y, box.width*sprite.width_scale, box.height*sprite.height_scale);\n        \n        //console.log(\"Boxed Object Reconized Type: \"+asset.recognizedType);\n       \n            if (this.boxed.indexOf(asset.assetid) == -1) {\n            // console.log(\"After adding\");\n              if (this.boxed.length == 0){ // Ensures that only one object is queried upon at a time, even if multiple objects are unrecognized\n                this.boxed.push(asset.assetid);\n                this.blinkCanvas(30, 300, \"blue\");\n                this.activeResponse = true;\n                this.queryTimeElapsed = false;\n                this.queryUserResponded = false;\n                this.logEvent(EVENTTYPE.NEW_MAIN_QUERY, asset.assetid);\n\n              }\n            // console.log(this.boxed);\n            }\n            else {\n              this.ctx.drawImage(box.img, 0, 0, box.width, box.height, physics.x + 0.5 * (sprite.width * sprite.width_scale - box.width * box.width_scale), asset.physics.y + 0.5 * (sprite.height * sprite.height_scale - box.height * box.height_scale), box.width * box.width_scale, box.height * box.height_scale);\n            }\n\n        }\n    }\n\n\n\n    // update position of all objects\n    if (this.assets.car.life != 0) {\n      if (asset instanceof _car_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]) {\n        physics.boundedUpdate();\n      } else {\n        physics.updatePosition();\n      }\n    }\n  }\n\n  randomizesprite() {\n    var rnd1 = Math.floor(Math.random() * Math.floor(this.numImgs));\n    var rnd2 = Math.floor(Math.random() * Math.floor(this.numImgs));\n    var rnd3 = Math.floor(Math.random() * Math.floor(this.numImgs));\n    this.lifeImgSrc = this.lifeImgLists[rnd1];\n    this.moneyImgSrc = this.moneyImgLists[rnd2];\n    this.rockImgSrc = this.obstacleImgLists[rnd3];\n    //console.log(this.lifeImgSrc);\n    // this.rocks.forEach(el => {\n    //   el.updatesprite(this.rockImgSrc);\n    // })\n    // this.life.forEach(el => {\n    //   el.updatesprite(this.lifeImgSrc);\n    // })\n    // this.cash.forEach(el => {\n    //   el.updatesprite(this.moneyImgSrc);\n    // })\n    //document.getElementById(\"obstacle\").style[\"background-image\"] = \"url(+\\'\" +\"../images/life/life (1).png\"+\"\\')\";\n    document.getElementById(\"obstacle\").style[\"background-image\"] = \"url(\\'\" + this.rockImgSrc + \"\\')\";\n    document.getElementById(\"money\").style[\"background-image\"] = \"url(\\'\" + this.moneyImgSrc + \"\\')\";\n    document.getElementById(\"life\").style[\"background-image\"] = \"url(\\'\" + this.lifeImgSrc + \"\\')\";\n    this.logEvent(EVENTTYPE.RANDOMIZE_ICON, this.lifeImgSrc + \":\" + this.moneyImgSrc + \":\" + this.rockImgSrc);\n  }\n\n  draw() {\n    if (!this.gameOver) {\n      const animate = () => {\n        const assets = Object.values(this.assets);\n        this.animate = requestAnimationFrame(animate);\n        this.ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        for (let i = 0; i < assets.length; i++) {\n          this.drawAsset(assets[i]);\n        }\n\n        // check collision for rocks\n        this.rocks.forEach(el => {\n          Game.checkCollision(this.assets.car, el, this.rocks,this.assets,this.boxed,this);\n          Game.checkCanvas(el, this.rocks, this.boxed,this);\n        })\n\n        // check collision for life\n\n        this.life.forEach(el => {\n          Game.checkCollision(this.assets.car, el, this.life,this.assets,this.boxed,this);\n          Game.checkCanvas(el, this.life,this.boxed,this);\n        })\n\n        // check collision for life\n        this.cash.forEach(el => {\n          Game.checkCollision(this.assets.car, el, this.cash, this.assets,this.boxed,this);\n          Game.checkCanvas(el, this.cash,this.boxed,this);\n        })\n\n        this.life.forEach(el => {\n          this.drawAsset(el);\n          el.move();\n        });\n\n        this.rocks.forEach(el => {\n          this.drawAsset(el);\n          el.move();\n        })\n\n        this.cash.forEach(el => {\n          this.drawAsset(el);\n          el.move();\n        })\n\n        // render score and lives\n        this.assets.road.addScore();\n        // document.getElementById(\"score\").innerHTML = `${this.assets.road.score}`;\n        // document.getElementById(\"lives\").innerHTML = `${this.assets.car.life}`;\n        this.end();\n      }\n\n      animate();\n    }\n  }\n\n  end() {\n    var d = new Date();\n    \n    if (d.getTime() - this.startTime > GAME_TIME) { //  TODO:Termination condition\n      this.logEvent(EVENTTYPE.GAME_OVER, \"\");\n      this.gameOver = true;\n      this.assets.road.stop();\n      this.activeResponse = false;\n      this.distractorTaskActive = false;\n      this.draw();\n      document.getElementById(\"slow\").innerHTML = `Game Over!`;\n      document.getElementById(\"how\").style.visibility = \"hidden\";\n      document.getElementById(\"welcome\").style.display = null;\n    }\n    if (d.getTime() - this.startTime > GAME_TIME && !datalogWritten) {\n      console.log(this.dataLog);\n      datalogWritten = true;\n      //Code to write to a server data log file goes here\n    }\n  }\n\n  createRock(bool_marked) {\n\n    var boxDist = this.boxDistanceProbablityFunction();\n    this.rocks.push(new _obstacle_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](new _physics_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](\n      Math.floor(Math.random() * 310) + 80,\n      -20),this.rockImgSrc,bool_marked,(OBJECTTYPE.obstacle+(++this.assetidCounter).toString()), boxDist\n    ));\n\n    //DATA_LOG\n    this.logEvent(EVENTTYPE.CREATE_ASSET, OBJECTTYPE.obstacle + this.assetidCounter.toString());\n    if (this.queryType == QUERYTYPE.environment) {\n      this.logEvent(EVENTTYPE.ENV_QUERY_CREATED, OBJECTTYPE.obstacle + this.assetidCounter.toString() + \":\" + boxDist);\n    }\n    else if (this.queryType == QUERYTYPE.attention) {\n      this.logEvent(EVENTTYPE.ATT_QUERY_CREATED, OBJECTTYPE.obstacle + this.assetidCounter.toString() + \":\" + boxDist);\n    }\n  };\n\n  createLife(bool_marked) {\n    var boxDist = this.boxDistanceProbablityFunction();\n    this.life.push(new _life_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](new _physics_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](\n      Math.floor(Math.random() * 310) + 80,\n      -20), this.lifeImgSrc, bool_marked, (OBJECTTYPE.life + (++this.assetidCounter).toString()), boxDist\n    ));\n    //DATA_LOG\n    this.logEvent(EVENTTYPE.CREATE_ASSET, OBJECTTYPE.life + this.assetidCounter.toString());\n    if (this.queryType == QUERYTYPE.environment) {\n      this.logEvent(EVENTTYPE.ENV_QUERY_CREATED, OBJECTTYPE.life + this.assetidCounter.toString() + \":\" + boxDist);\n    }\n    else if (this.queryType == QUERYTYPE.attention) {\n      this.logEvent(EVENTTYPE.ATT_QUERY_CREATED, OBJECTTYPE.life + this.assetidCounter.toString() + \":\" + boxDist);\n    }\n  };\n\n  createCash(bool_marked) {\n    var boxDist = this.boxDistanceProbablityFunction();\n    this.cash.push(new _cash_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](new _physics_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](\n      Math.floor(Math.random() * 310) + 80,\n      -20), this.moneyImgSrc, bool_marked, (OBJECTTYPE.cash + (++this.assetidCounter).toString()), boxDist\n    ));\n\n    //DATA_LOG\n    this.logEvent(EVENTTYPE.CREATE_ASSET, OBJECTTYPE.cash + this.assetidCounter.toString());\n    if (this.queryType == QUERYTYPE.environment) {\n      this.logEvent(EVENTTYPE.ENV_QUERY_CREATED, OBJECTTYPE.cash + this.assetidCounter.toString() + \":\" + boxDist);\n    }\n    else if (this.queryType == QUERYTYPE.attention) {\n      this.logEvent(EVENTTYPE.ATT_QUERY_CREATED, OBJECTTYPE.cash + this.assetidCounter.toString() + \":\" + boxDist);\n    }\n    \n  };\n\n  cleanUp() {\n    // clearInterval(this.create);\n    window.cancelAnimationFrame(this.animate);\n  }\n\n  releaseControls() {\n    // set controls to zero to mimic  key release (0-order hold)\n    //console.info(\"Controls: Release\")\n    this.assets.car.physics.dLeft=0;\n    this.assets.car.physics.dRight=0;\n    this.assets.car.physics.dUp=0;\n    this.assets.car.physics.dDown=0;\n  }\n\n  moveLeft(u) {\n  //move car left by u\n  this.assets.car.physics.dLeft=u;\n  }\n\n  moveRight(u) {\n  //move car left by u\n  this.assets.car.physics.dRight=u;\n  }\n\n  closestObject() {\n    //returns type of object closest to car (in front)\n    // 0: cash, 1: rock, 2: life, 3: no spawned object ahead\n\n    var y_cash;\n    var y_rocks;\n    var y_life;\n    //console.info(\"Trying to find closest obj type\")\n    if(this.cash && this.cash.length>0)// && this.cash[0].recognizedType != \"U\") //check Cash\n    {      y_cash = this.cash[0].physics.y;     }//of the oldest cash created\n      else {y_cash = -10000;} //a number that places it far away\n\n    if(this.rocks && this.rocks.length>0)// && this.rocks[0].recognizedType != \"U\") //check Rock\n    {          y_rocks = this.rocks[0].physics.y;     }\n      else {y_rocks = -10000;} //a number that places it far away\n\n    if(this.life && this.life.length>0)// && this.life[0].recognizedType != \"U\") //check life\n    {          y_life = this.life[0].physics.y;     }\n      else {y_life = -10000;} //a number that places it far away\n\n    var y_car = this.assets.car.physics.y;\n    var dists_y = [10000*((y_car-y_cash)<=-obj_buf)+(y_car-y_cash)*((y_car-y_cash)>-obj_buf),\n                   10000*((y_car-y_rocks)<=-obj_buf)+(y_car-y_rocks)*((y_car-y_rocks)>-obj_buf),\n                   10000*((y_car-y_life)<=-obj_buf)+(y_car-y_life)*((y_car-y_life)>-obj_buf),\n                 ]; //if object is behind var, make this a large positive value\n    var ix_min = indexOfSmallest(dists_y);\n   //console.info(\"Controls: Closest type: \",ix_min);\n   //console.info(\"Controls: Distance in y = \",dists_y[ix_min]);\n\n    if(dists_y[ix_min]>10000) //no spawned object ahead\n    {ix_min = 3; }\n    return ix_min;\n   \n } //end of closestObject\n\n  closestObjectAndLocation() {\n    //returns type of object closest to car (in front)\n    // 0: cash, 1: rock, 2: life, 3: no spawned object ahead\n\n    var y_cash;\n    var y_rocks;\n    var y_life;\n    var object_x=0; //x coordinate of closest object\n    var actual_type = 3;\n    var identified_type =3;\t\t\n    //console.info(\"Trying to find closest obj type\")\n    if(this.cash && this.cash.length>0) //check Cash existence\n    {      \n        if(this.cash[0].recognizedType != \"U\") //and if recognized \n\t{\n        y_cash = this.cash[0].physics.y;     \n\tidentified_type = (this.cash[0].recognizedType==\"C\")? 0 : ((this.cash[0].recognizedType==\"O\") ? 1 : 2);\n\tobject_x = this.cash[0].physics.x;\n\t}\n    }//of the oldest cash created\n      else {y_cash = -10000;} //a number that places it far away\n\n    if(this.rocks && this.rocks.length>0) //check Rock\n    {          \n        if(this.rocks[0].recognizedType != \"U\") //and if recognized\n        {\n\ty_rocks = this.rocks[0].physics.y;\n\tidentified_type = (this.rocks[0].recognizedType==\"O\")? 1 : ((this.rocks[0].recognizedType==\"C\") ? 0 : 2);\n        object_x = this.rocks[0].physics.x;      \n\t}\n    }\n      else {y_rocks = -10000;} //a number that places it far away\n\n    if(this.life && this.life.length>0) //check life\n    {   \n        //console.info(\"Closest is life\");       \n        if(this.life[0].recognizedType != \"U\") //and if recogd\n        {\n\ty_life = this.life[0].physics.y;     \n\tidentified_type = (this.life[0].recognizedType==\"L\")? 2 : ((this.life[0].recognizedType==\"C\") ? 0 : 1);\n        object_x = this.life[0].physics.x; \n\t}\n    }\n      else {y_life = -10000;} //a number that places it far away\n\n    var y_car = this.assets.car.physics.y;\n    var dists_y = [10000*((y_car-y_cash)<=-obj_buf)+(y_car-y_cash)*((y_car-y_cash)>-obj_buf),\n                   10000*((y_car-y_rocks)<=-obj_buf)+(y_car-y_rocks)*((y_car-y_rocks)>-obj_buf),\n                   10000*((y_car-y_life)<=-obj_buf)+(y_car-y_life)*((y_car-y_life)>-obj_buf),\n                 ]; //if object is behind var, make this a large positive value\n    var ix_min = indexOfSmallest(dists_y);\n    actual_type = ix_min;\t\n   //console.info(\"Controls: Closest type: \",ix_min);\n   //console.info(\"Controls: Distance in y = \",dists_y[ix_min]);\n\n    if(dists_y[ix_min]>10000) //no spawned object ahead\n    {ix_min = 3; object_x = 0;}//or whatever, not to be used }\n\n    /*\tnot correct as even unidentified objects get a type to them!\n    if(ix_min==0) //if closest object was a cash             \n    { \n      identified_type = (this.cash[0].recognizedType==\"C\")? 0 : ((this.cash[0].recognizedType==\"O\") ? 1 : 2);\n      object_x = this.cash[0].physics.x;\n    }\n    if(ix_min==1) //if closest object was a rock\n    {\n        \n      identified_type = (this.rocks[0].recognizedType==\"O\")? 1 : ((this.rocks[0].recognizedType==\"C\") ? 0 : 2);\n      object_x = this.rocks[0].physics.x;  \n    }             \n    if(ix_min==2) //if closest object was a life\n    { \n      identified_type = (this.life[0].recognizedType==\"L\")? 2 : ((this.life[0].recognizedType==\"C\") ? 0 : 1);\n      object_x = this.life[0].physics.x; \n      console.info(\"Sending life x\");   \n    }\n\t*/\n\t\n    return [actual_type,identified_type,object_x];\n   //if(dists_y[ix_min]>10000) //no spawned object ahead\n   //{return 3;}\n   //else {return ix_min;} //else return type of object ahead\n\n } //end of closestObjectAndLocation\n\n\nrockAvoider(Ox) { //gets x coordinate of object to avoid\n  var Cx = this.assets.car.physics.x;\n  //var Ox = this.rocks[0].physics.x; //x of nearest rock\n  var x_ref = Cx;\n  if(Math.abs(Ox-Cx) >= T_width)\n  {\n    //don't move\n    x_ref = Cx;\n    //console.info(\"Decision: Not moving, obs diff x= \",Ox-Cx, \"T_width=\",T_width);\n  }\n  else { //got to move\n    if(Ox>=Cx){ //obstacle on right\n      if(Cx-R_l>=T_width-(Ox-Cx)){ //room on left?\n        x_ref = Ox-T_width;\n        //console.info(\"Decision: Obs right, Going from left of obstacle \");\n      }\n      else{ //no room on left\n        x_ref = Ox+T_width;\n        //console.info(\"Decision: Obs right, Going from right of obstacle \");\n      }\n    } //end if Ox>=Cx\n    else //obstacle on left\n    { //if Ox<Cx\n      if(R_u-Cx > T_width-(Cx-Ox)) //room on right?\n      {\n        x_ref = Ox+T_width;\n        //console.info(\"Decision: Obs left, Going from right of obstacle \");\n      }\n      else //no room on right\n      {\n        x_ref = Ox-T_width;\n        //console.info(\"Decision: Obs left, Going from left of obstacle \");\n      }\n    } //end of else obstacle on left\n  } //end of else got to move\n// take action\nvar err_x = x_ref-Cx;\n  if(err_x>0)\n  {\n      this.moveRight(Kp_obs*err_x);\n      //console.info(\"Controls: Right, ref = \",x_ref, \"err=\",err_x);\n  }\n  else if(err_x<0) //0 is to not move\n  {\n      this.moveLeft(-Kp_obs*err_x);\n      //console.info(\"Controls: Left, ref = \",x_ref, \"err=\",err_x);\n  }\n\n} //end of rock avoider\n\nobjectGetter(x_ref) { //directly gets x ref to go to in order to collect object\n  /*if(o_type==0) //Cash\n  {\n    var x_ref = this.cash[0].physics.x;\n  }\n  else if(o_type==2) //life\n  {\n    var x_ref = this.life[0].physics.x;\n  }*/\n  var err_x = x_ref - this.assets.car.physics.x;\n  if(err_x>=0)\n      {\n      //console.info(\"Controls: Going right\");\n      this.moveRight(Kp_getter*err_x);\n      }\n  else\n      {\n      //console.info(\"Controls: Going left\");\n      this.moveLeft(-Kp_getter*err_x);\n      }\n\n\n} //end of object getter\n\n  \n  logEvent(eventtype, eventdata) {\n    if (!this.gameOver) {\n      var d = new Date();\n      this.dataLog += (d.getTime()).toString() + \",\" + eventtype + \",\" + eventdata + '\\n';\n    }\n  \n}  \n  \nmoveRandom(step){\n  //move randomly\n\n     if(Math.random() >= 0.5)\n     {\n     //console.info(\"Controls: \",\"Random Left\");\n     this.moveLeft(step);\n     }\n     else\n     {\n     //console.info(\"Controls: \",\"Random Right\");\n     this.moveRight(step);\n     }\n} //end move random\n\n  start() {\n\n    var dstart = new Date();\n    this.gameOver = false;\n    this.startTime = dstart.getTime();\n    document.getElementById(\"welcome\").style.display = \"none\";\n    this.assets.car.resetLife();\n    this.logEvent(EVENTTYPE.GAME_START, \"\");\n    console.log(\"Screen Res - Width:\" + screen.width + \"Height:\" + screen.height);\n    if (screen.width >= MIN_RES_WIDTH-1 && screen.height >= MIN_RES_HEIGHT-1) {\n      setInterval(() => {\n        if (!this.gameOver) {\n          var d = new Date();\n          var boxEmpty = Array.isArray(this.boxed) && !this.boxed.length;\n          \n                \n          \n          \n          // var askEnvQuery = boxEmpty && ((d.getTime() - this.timeOfLastEnvQuery) > ENV_QUERY_INTERVAL);\n          // if (askEnvQuery) {\n          //   console.log(\"Asking Environment Query: \" + (d.getTime() - this.timeOfLastEnvQuery).toString());\n          //   this.timeOfLastEnvQuery = d.getTime();\n          // }\n          \n        \n          // var askAttQuery = boxEmpty // If no query is currently active\n          //   && !askEnvQuery // if Env query is not selected\n          //   && this.askAttentionQueryBasedOnAttentionProbFunction() // if we need to ask attention query based on probablity\n          //   && (d.getTime() - this.timeOfLastEnvQuery) > 0.5 * NO_QUERY_TIME_WINDOW_FOR_ATT_QUERY // if we have crossed a time window since last env query\n          //   && (this.timeOfLastEnvQuery + ENV_QUERY_INTERVAL - d.getTime()) > 0.5 * NO_QUERY_TIME_WINDOW_FOR_ATT_QUERY; // if we are far away from time window of future env query\n          \n          var askAttQuery = boxEmpty && ((d.getTime() - this.timeOfLastAttQuery) > ATT_QUERY_INTERVAL);\n          \n          \n          var askEnvQuery = boxEmpty // If no query is currently active\n            && !askAttQuery // if Att query is not selected\n            && this.askEnvironmentQueryBasedOnEnvironmentProbFunction() // if we need to ask env query based on probablity\n            && (this.timeOfLastAttQuery + ATT_QUERY_INTERVAL - d.getTime()) > 0.5 * NO_QUERY_TIME_WINDOW_FOR_ENV_QUERY; // if we are far away from time window of future env query ?? ERIN_TODO: Do we need this?\n            // YP: Edited this code to try and mane att queries periodic\n            /*&& (d.getTime() - this.timeOfLastAttQuery) > 0.5 * NO_QUERY_TIME_WINDOW_FOR_ENV_QUERY // if we have crossed a time window since last env query\n            && (this.timeOfLastAttQuery + ATT_QUERY_INTERVAL - d.getTime()) > 0.5 * NO_QUERY_TIME_WINDOW_FOR_ENV_QUERY; // if we are far away from time window of future env query\n            */\n           console.log(\"Checking if env query: \", askEnvQuery);\n          \n            if (askEnvQuery) {\n              console.log(\"Asking Environment Query: \" + (d.getTime() - this.timeOfLastEnvQuery).toString());\n              this.timeOfLastEnvQuery = d.getTime();\n            }\n\n            if (askAttQuery) {\n            console.log(\"Asking Attention Query:\" + (d.getTime() - this.timeOfLastAttQuery).toString());\n            this.timeOfLastAttQuery = d.getTime();\n          }\n        \n          if (askAttQuery)\n            this.queryType = QUERYTYPE.attention;\n          else if (askEnvQuery)\n            this.queryType = QUERYTYPE.environment;\n          else\n            this.queryType = null;\n        \n          switch (this.objectTypeProbablityFunction()) {\n            case OBJECTTYPE.obstacle: this.createRock(askEnvQuery || askAttQuery);\n              break;\n            case OBJECTTYPE.life: this.createLife(askEnvQuery || askAttQuery);\n              break;\n            case OBJECTTYPE.cash: this.createCash(askEnvQuery || askAttQuery);\n              break;\n          }\n          ctr++;\n        }\n      }, OBJECT_CREATION_INTERVAL); //20000\n\n      setInterval(() => {\n        this.randomizesprite();\n      }, 84000); //what is the right interval for this?\n    \n      setInterval(() => {\n        this.updateTimeBar();\n      }, TIMEBAR_INTERVAL_TIME);\n      setInterval(() => {\n        this.updateDistractorTimeBar();\n      }, TIMEBAR_INTERVAL_TIME);\n\n\n      // setInterval(() => {\n      //   console.log(this.dataLog);\n      // }, 50000);\n\n      //--------------------AI agent---------------------\n      setInterval(() => { //controls\n        this.releaseControls(); //zero-order hold (release key)\n        var closestObjectType;\n        //closestObjectType = this.closestObject(); //get type of object that is closest\n        //console.info(\"Controls: Closest object type = \",closestObjectType);\n\n        // test new closestObjectCode\n        var returns;\n        returns = this.closestObjectAndLocation();\n        // console.info(\"True type of closest obj= \",returns[0]);\n        // console.info(\"Id'd type of closest obj= \",returns[1]);\n        // console.info(\"x coordinate of closest obj = \",returns[2]);\t\n\n    \n        // control based on identified object\n        if (returns[1] == 1) //id'd as obstacle\n        {\n          this.rockAvoider(returns[2]);\n        }\n        else if (returns[1] == 0 || returns[1] == 2) //id'd as an object to get\n        {\n          this.objectGetter(returns[2]);\n        }\n        else {\n          //do nothing //this.moveRandom(0.5);\n        }\n\t\n\n    \n        //rock  avoider\n        /*if(closestObjectType==1) //obstacle\n        {\n          this.rockAvoider();\n        }\n        else if(closestObjectType==0 || closestObjectType==2) //object to get\n        {\n          this.objectGetter(closestObjectType);\n        }\n        else\n        {\n          this.moveRandom(0.5);\n        }*/\n      }, CONTROLLER_SAMPLING_TIME); //every 100ms\n\n      //-----------------end AI agent code---------------\n\n      this.draw();\n      this.assets.road.move();\n\n    }\n    else {\n      this.gameOver = true;\n      document.getElementById(\"slow\").innerHTML = `You need a minimum display resolution of 1280x800 to take part in this study`;\n      document.getElementById(\"how\").style.visibility = \"hidden\";\n      document.getElementById(\"welcome\").style.display = null;\n      //this.LogIn the file (error) //TODO_ERIN\n    }\n  }\n\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);\n\n\n//# sourceURL=webpack:///./src/game.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game.js */ \"./src/game.js\");\n/* harmony import */ var _car_controls_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./car_controls.js */ \"./src/car_controls.js\");\n/* harmony import */ var _bumblebee_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bumblebee.js */ \"./src/bumblebee.js\");\n\n// import assets from './assets.js';\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"canvas\");\n  const ctx = canvas.getContext('2d');\n  canvas.height = 700;\n  canvas.width = 500;\n  let game = new _game_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas, ctx);\n  document.getElementById(\"how\").innerHTML = `v1 - Use directional arrows or WSAD to move your car around. Collect as much cash as you can to increase your points while avoiding the rocks!`;\n  \n  document.getElementById(\"play-btn\").addEventListener(\"click\", () => {\n\n    if (game.gameOver === true) {\n      game.cleanUp();\n      game = new _game_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas, ctx);\n    }\n    \n    Object(_car_controls_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(game);\n    \n    game.start();\n    \n    //let bumblebee = new BumbleBee(game);\n    // write custom code here\n    //setInterval(bumblebee.randomizesprite, 500);\n\n    \n  })\n});\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/life.js":
/*!*********************!*\
  !*** ./src/life.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sprite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sprite */ \"./src/sprite.js\");\n\n\nconst lifeImg = new Image();\n//lifeImg.src = \"./assets/images/turbo.png\";\nconst scale = 1.5;\nconst redBox = new Image();\nredBox.src = \"./assets/images/redbox.png\";\n\nclass Life {\n  constructor(physics, imgSrc, marked, assetid,distance = -1) {\n    this.physics = physics;\n    \n    lifeImg.src = imgSrc;\n\n    this.sprite = new _sprite__WEBPACK_IMPORTED_MODULE_0__[\"default\"](lifeImg, 50, 50, 1.0*scale, 1.0*scale);\n    this.box = new _sprite__WEBPACK_IMPORTED_MODULE_0__[\"default\"](redBox, 40, 50, 1.0*scale, 1.3*scale)\n    this.marked = marked;\n    this.assetid = assetid;\n    this.recognizedType = this.marked? \"U\" : assetid[0];  \n    this.distance = distance;\n    \n  }\n\n  updatesprite(imgSrc) {\n    lifeImg.src = imgSrc;\n    this.sprite = new _sprite__WEBPACK_IMPORTED_MODULE_0__[\"default\"](lifeImg, 50, 50, 1.0*scale, 1.0*scale);\n  }\n\n  move() {\n    this.physics.dDown = this.physics.speed;\n  }\n\n  stop() {\n    this.physics.dDown = 0;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Life);\n\n//# sourceURL=webpack:///./src/life.js?");

/***/ }),

/***/ "./src/obstacle.js":
/*!*************************!*\
  !*** ./src/obstacle.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _physics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./physics */ \"./src/physics.js\");\n/* harmony import */ var _sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sprite */ \"./src/sprite.js\");\n\n\n\nconst rockImg = new Image();\nconst redBox = new Image();\nconst scale = 1.5;\n//rockImg.src = \"./assets/images/rock.png\";\nredBox.src = \"./assets/images/redbox.png\"; //TODO_ERIN: Convert it to a bluebox\nclass Obstacle {\n  constructor(physics,imgSrc,marked,assetid, distance=-1) {\n    this.physics = physics;\n    rockImg.src = imgSrc;\n    this.sprite = new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](rockImg, 50, 50, 1.0 * scale, 1.0 * scale);\n    this.box = new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](redBox, 40, 50, 1.0 * scale, 1.3 * scale)\n    this.marked = marked;\n    this.assetid = assetid;\n    this.recognizedType = this.marked? \"U\" : assetid[0];  \n    this.distance = distance;\n   \n  }\n\n  updatesprite(imgSrc) {\n    rockImg.src = imgSrc;\n    this.sprite = new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](rockImg, 50, 50, 1.0 * scale, 1.0 * scale);\n  }\n  \n\n  move() {\n    this.physics.dDown = this.physics.speed;\n  }\n\n  stop() {\n    this.physics.dDown = 0;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Obstacle);\n\n//# sourceURL=webpack:///./src/obstacle.js?");

/***/ }),

/***/ "./src/physics.js":
/*!************************!*\
  !*** ./src/physics.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/********************************************\n|                                           |\n|            physics.js                     |\n|                                           |\n********************************************/\n\n//var speed = 1;\nclass Physics {\n  constructor(x, y, w = null, h = null) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n    this.dLeft = 0;\n    this.dRight = 0;\n    this.dDown = 0;\n    this.dUp = 0;\n    this.dx = this.dx.bind(this);\n    this.dy = this.dy.bind(this);\n    this.speed = 1;//0.4;\n  }\n\n  dx() {\n    return - this.dLeft + this.dRight; \n  }\n\n  dy() {\n    return - this.dUp + this.dDown;\n  }\n\n  updatePosition() {\n    this.x += this.dx();\n    this.y += this.dy();\n  }\n\n  // updates car\n  boundedUpdate() {\n    const {dx, dy} = this;\n    const bound = { top: 0, down: 580, left: 80, right: 350 };\n    this.boundedMove({x: dx(), y: dy()}, bound);\n  }\n\n  // sets boundaries for car\n  boundedMove(move, bound) {\n    this.x += move.x;\n    this.y += move.y;\n    if (this.x < bound.left) {\n      this.x = bound.left;\n    }\n    if (this.x > bound.right) {\n      this.x = bound.right;\n    }\n    if (this.y < bound.top) {\n      this.y = bound.top;\n    }\n    if (this.y > bound.down) {\n      this.y = bound.down;\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Physics);\n\n//# sourceURL=webpack:///./src/physics.js?");

/***/ }),

/***/ "./src/road.js":
/*!*********************!*\
  !*** ./src/road.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _physics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./physics */ \"./src/physics.js\");\n/* harmony import */ var _sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sprite */ \"./src/sprite.js\");\n/********************************************\n|                                           |\n|            road.js                        |\n|                                           |\n********************************************/\n\n\n\n\nconst roadImg = new Image();\nroadImg.src = \"./assets/images/road.png\";\n\nclass Road {\n  constructor(physics) {\n    this.physics = physics;\n    this.sprite = new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](roadImg, 1262, 502);\n    this.score = 0;\n    this.gameOver = false;\n    this.box = null;\n    this.marked = null;\n  }\n\n  move() {\n    this.physics.dDown = this.physics.speed;\n    console.log(\"Road speed: \" + this.physics.speed)\n  }\n\n  addScore() {\n    if (!this.gameOver) {\n      this.score += 1;\n    } else {\n      this.score;\n    }\n  }\n\n  makeGreen() {\n    // const score = document.getElementById(\"score\");\n    // score.classList.toggle(\"score-value--mod\");\n    // setTimeout(() => {\n    //   score.classList.toggle(\"score-value--mod\");\n    // }, 300);\n  }\n\n  stop() {\n    this.physics.dDown = 0;\n    this.gameOver = true;\n  }\n\n  addSpeed() {\n   // this.physics.dDown += 1;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Road);\n\n\n\n//# sourceURL=webpack:///./src/road.js?");

/***/ }),

/***/ "./src/sprite.js":
/*!***********************!*\
  !*** ./src/sprite.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Sprite {\n  constructor(img, height, width,width_scale=1,height_scale=1) {\n    this.img = img;\n    this.height = height;\n    this.width = width;\n    this.width_scale = width_scale;\n    this.height_scale = height_scale;\n  }\n  \n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sprite);\n\n//# sourceURL=webpack:///./src/sprite.js?");

/***/ }),

/***/ "./src/util.js":
/*!*********************!*\
  !*** ./src/util.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const Util = {\n  collide(obj1, obj2) {\n    const width1 = obj1.physics.width ? obj1.physics.width : obj1.sprite.width;\n    const width2 = obj2.physics.width ? obj2.physics.width : obj2.sprite.width;\n    const height1 = obj1.physics.height ? obj1.physics.height : obj1.sprite.height;\n    const height2 = obj2.physics.height ? obj2.physics.height : obj2.sprite.height;\n    if (\n      obj1.physics.x < obj2.physics.x + width2\n      && obj1.physics.x + width1 > obj2.physics.x\n      && obj1.physics.y < obj2.physics.y + height2\n      && obj1.physics.y + height1 > obj2.physics.y\n    ) return true;\n\n    return false;\n  },\n  collide_with_scale(obj1, obj2) {\n    const width1 = obj1.physics.width ? obj1.physics.width : obj1.sprite.width*obj1.sprite.width_scale;\n    const width2 = obj2.physics.width ? obj2.physics.width : obj2.sprite.width*obj2.sprite.width_scale;\n    const height1 = obj1.physics.height ? obj1.physics.height : obj1.sprite.height*obj1.sprite.height_scale;\n    const height2 = obj2.physics.height ? obj2.physics.height : obj2.sprite.height*obj2.sprite.height_scale;\n    if (\n      obj1.physics.x < obj2.physics.x + width2\n      && obj1.physics.x + width1 > obj2.physics.x\n      && obj1.physics.y < obj2.physics.y + height2\n      && obj1.physics.y + height1 > obj2.physics.y\n    ) return true;\n\n    return false;\n  }\n};\n\nmodule.exports = Util;\n\n//# sourceURL=webpack:///./src/util.js?");

/***/ })

/******/ });